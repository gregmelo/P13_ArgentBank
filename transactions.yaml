openapi: 3.0.3
info:
  title: Argent Bank Transaction API
  description: API for managing transaction information in Argent Bank application, allowing users to view and manage metadata on transactions.
  version: 1.0.0
servers:
  - url: https://api.argentbank.com/v1/user
    description: Production server
paths:
  /accounts/{accountId}/transactions:
    get:
      summary: Get all transactions for a specific account in the current month
      description: Retrieves a list of transactions for a given account, filtered by the current month by default. Optionally, a specific month can be provided.
      operationId: getTransactionsByAccount
      parameters:
        - name: accountId
          in: path
          description: ID of the account to fetch transactions for
          required: true
          schema:
            type: string
            example: "x8349"
        - name: month
          in: query
          description: |
            Month to filter transactions (format: YYYY-MM). Defaults to the current month (e.g., 2025-03 as of March 2025) if not provided.
          required: false
          schema:
            type: string
            example: "2025-03"
      responses:
        '200':
          description: A list of transactions for the specified account and month
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '400':
          description: Invalid account ID or month format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /accounts/{accountId}/transactions/{transactionId}:
    post:
      summary: Add information to a transaction
      description: Adds user-editable information (description, category, notes) to an existing transaction identified by its ID within an account.
      operationId: addTransactionInfo
      parameters:
        - name: accountId
          in: path
          description: ID of the account containing the transaction
          required: true
          schema:
            type: string
            example: "x8349"
        - name: transactionId
          in: path
          description: ID of the transaction to add information to
          required: true
          schema:
            type: string
            example: "txn123"
      requestBody:
        description: Transaction information to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionInfoInput'
      responses:
        '201':
          description: Transaction information added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Invalid information data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Transaction or account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update transaction information
      description: Updates user-editable information (description, category, notes) for an existing transaction identified by its ID within an account.
      operationId: updateTransactionInfo
      parameters:
        - name: accountId
          in: path
          description: ID of the account containing the transaction
          required: true
          schema:
            type: string
            example: "x8349"
        - name: transactionId
          in: path
          description: ID of the transaction to update information for
          required: true
          schema:
            type: string
            example: "txn123"
      requestBody:
        description: Updated transaction information
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionInfoInput'
      responses:
        '200':
          description: Transaction information updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Invalid information data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Transaction or account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Remove transaction information
      description: Removes user-added information (description, category, notes) from an existing transaction identified by its ID within an account, resetting them to default or null values.
      operationId: deleteTransactionInfo
      parameters:
        - name: accountId
          in: path
          description: ID of the account containing the transaction
          required: true
          schema:
            type: string
            example: "x8349"
        - name: transactionId
          in: path
          description: ID of the transaction to remove information from
          required: true
          schema:
            type: string
            example: "txn123"
      responses:
        '204':
          description: Transaction information removed successfully
        '404':
          description: Transaction or account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      summary: Get details of a specific transaction
      description: Retrieves detailed information about a specific transaction identified by its ID within an account, including user-added metadata.
      operationId: getTransactionById
      parameters:
        - name: accountId
          in: path
          description: ID of the account containing the transaction
          required: true
          schema:
            type: string
            example: "x8349"
        - name: transactionId
          in: path
          description: ID of the transaction to fetch
          required: true
          schema:
            type: string
            example: "txn123"
      responses:
        '200':
          description: Detailed information about the transaction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '404':
          description: Transaction or account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Transaction:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the transaction
          example: "txn123"
        accountId:
          type: string
          description: ID of the account
          example: "x8349"
        date:
          type: string
          format: date
          description: Date of the transaction
          example: "2025-03-15"
        description:
          type: string
          description: User-editable description of the transaction
          example: "Golden Sun Bakery"
        amount:
          type: number
          format: float
          description: Amount of the transaction
          example: 50.00
        balance:
          type: number
          format: float
          description: Account balance after the transaction
          example: 2187.79
        type:
          type: string
          description: Type of transaction
          example: "Electronic"
        category:
          type: string
          description: User-editable category of the transaction
          example: "Food"
        notes:
          type: string
          description: User-added notes
          example: "Lunch with friends"
      required:
        - id
        - accountId
        - date
        - amount
        - balance
        - type
    TransactionInfoInput:
      type: object
      properties:
        description:
          type: string
          description: User-editable description of the transaction
          example: "Golden Sun Bakery"
        category:
          type: string
          description: User-editable category of the transaction
          example: "Food"
        notes:
          type: string
          description: User-added notes
          example: "Lunch with friends"
      required:
        - description
        - category
    Error:
      type: object
      properties:
        code:
          type: integer
          description: Error code
          example: 400
        message:
          type: string
          description: Error message
          example: "Invalid account ID"
      required:
        - code
        - message