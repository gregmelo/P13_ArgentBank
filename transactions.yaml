openapi: 3.0.3
info:
  title: Argent Bank Transaction API
  description: API for managing transactions in Argent Bank application.
  version: 1.0.0
servers:
  - url: https://api.argentbank.com/v1
    description: Production server
paths:
  /accounts/{accountId}/transactions:
    get:
      summary: Get all transactions for a specific account in the current month
      description: Retrieves a list of transactions for a given account, filtered by the current month.
      operationId: getTransactionsByAccount
      parameters:
        - name: accountId
          in: path
          description: ID of the account to fetch transactions for
          required: true
          schema:
            type: string
            example: "x8349"
        - name: month
          in: query
          description: |
            Month to filter transactions (format: YYYY-MM, defaults to current month if not provided)
          required: false
          schema:
            type: string
            example: "2020-06"
      responses:
        '200':
          description: A list of transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '400':
          description: Invalid account ID or month format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a new transaction
      description: Adds a new transaction to the specified account.
      operationId: createTransaction
      parameters:
        - name: accountId
          in: path
          description: ID of the account to add the transaction to
          required: true
          schema:
            type: string
            example: "x8349"
      requestBody:
        description: Transaction object to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionInput'
      responses:
        '201':
          description: Transaction created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Invalid transaction data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /accounts/{accountId}/transactions/{transactionId}:
    get:
      summary: Get details of a specific transaction
      description: Retrieves the details of a specific transaction by its ID.
      operationId: getTransactionById
      parameters:
        - name: accountId
          in: path
          description: ID of the account
          required: true
          schema:
            type: string
            example: "x8349"
        - name: transactionId
          in: path
          description: ID of the transaction to fetch
          required: true
          schema:
            type: string
            example: "txn123"
      responses:
        '200':
          description: Transaction details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '404':
          description: Transaction or account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update a transaction
      description: Updates an existing transaction by its ID.
      operationId: updateTransaction
      parameters:
        - name: accountId
          in: path
          description: ID of the account
          required: true
          schema:
            type: string
            example: "x8349"
        - name: transactionId
          in: path
          description: ID of the transaction to update
          required: true
          schema:
            type: string
            example: "txn123"
      requestBody:
        description: Updated transaction data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionInput'
      responses:
        '200':
          description: Transaction updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Invalid transaction data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Transaction or account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete a transaction
      description: Deletes a transaction by its ID.
      operationId: deleteTransaction
      parameters:
        - name: accountId
          in: path
          description: ID of the account
          required: true
          schema:
            type: string
            example: "x8349"
        - name: transactionId
          in: path
          description: ID of the transaction to delete
          required: true
          schema:
            type: string
            example: "txn123"
      responses:
        '204':
          description: Transaction deleted successfully
        '404':
          description: Transaction or account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Transaction:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the transaction
          example: "txn123"
        accountId:
          type: string
          description: ID of the account
          example: "x8349"
        date:
          type: string
          format: date
          description: Date of the transaction
          example: "2020-06-20"
        description:
          type: string
          description: Description of the transaction
          example: "Golden Sun Bakery"
        amount:
          type: number
          format: float
          description: Amount of the transaction
          example: 50.00
        balance:
          type: number
          format: float
          description: Account balance after the transaction
          example: 2187.79
        type:
          type: string
          description: Type of transaction
          example: "Electronic"
        category:
          type: string
          description: Category of the transaction
          example: "Food"
        notes:
          type: string
          description: User-added notes
          example: "Lunch with friends"
      required:
        - id
        - accountId
        - date
        - description
        - amount
        - balance
        - type
        - category
    TransactionInput:
      type: object
      properties:
        date:
          type: string
          format: date
          description: Date of the transaction
          example: "2020-06-20"
        description:
          type: string
          description: Description of the transaction
          example: "Golden Sun Bakery"
        amount:
          type: number
          format: float
          description: Amount of the transaction
          example: 50.00
        type:
          type: string
          description: Type of transaction
          example: "Electronic"
        category:
          type: string
          description: Category of the transaction
          example: "Food"
        notes:
          type: string
          description: User-added notes
          example: "Lunch with friends"
      required:
        - date
        - description
        - amount
        - type
        - category
    Error:
      type: object
      properties:
        code:
          type: integer
          description: Error code
          example: 400
        message:
          type: string
          description: Error message
          example: "Invalid account ID"
      required:
        - code
        - message